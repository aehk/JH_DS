install.packages("swirl")
library("swirl", lib.loc="C:/Users/de05e5/Programs/R-Portable/App/R-Portable/library")
r version
version
install.packages("swirl")
library("swirl", lib.loc="C:/Users/de05e5/Programs/R-Portable/App/R-Portable/library")
swirl()
install_from_swirl("R Programming")
library(httr)
set_config(use_proxy(url="httpproxy.de.linde.com", port=8080))
install_from_swirl("R Programming")
set_config(use_proxy(url="httpproxy.de.linde.grp", port=8080))
install_from_swirl("R Programming")
swirl()
5+7
x = 5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c()
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+ c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
5 + 7
swirl()
swirl()
1:20
pi:10
15:1
?´:´
?`:`
seq(1,20)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
dead(flags)
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
flg_or <- sapply(flags, sum(flags$orange))
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags,
| class, character(1))
vapply(flags,class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$landmass, flags$population, summary)
tapply(flags$population, flags$landmass, summary)
